/* config.h.in.  Generated from configure.ac by autoheader.  */

/* Defined if the compiler supports the attribution visibility syntax
   __attribute__((visibility("hidden"))) */
#undef HAS_GCC_VISIBILITY_ATTRIBUTE

/* struct ctf_dict_t is present */
#undef HAVE_CTF_DICT_T

/* Define to 1 if you have the <dlfcn.h> header file. */
#undef HAVE_DLFCN_H

/* Define to 1 if dwarf.h has the DW_FORM_line_strp enumerator */
#undef HAVE_DW_FORM_line_strp

/* Define to 1 if dwarf.h has the DW_FORM_strx enumerators */
#undef HAVE_DW_FORM_strx

/* Define to 1 if dwarf.h has the DW_FORM_strx1 enumerator */
#undef HAVE_DW_FORM_strx1

/* Define to 1 if dwarf.h has the DW_FORM_strx2 enumerator */
#undef HAVE_DW_FORM_strx2

/* Define to 1 if dwarf.h has the DW_FORM_strx3 enumerator */
#undef HAVE_DW_FORM_strx3

/* Define to 1 if dwarf.h has the DW_FORM_strx4 enumerator */
#undef HAVE_DW_FORM_strx4

/* Define to 1 if dwarf.h has the DW_LANG_C11 enumerator */
#undef HAVE_DW_LANG_C11_enumerator

/* Define to 1 if dwarf.h has the DW_LANG_C_plus_plus_03 enumerator */
#undef HAVE_DW_LANG_C_plus_plus_03_enumerator

/* Define to 1 if dwarf.h has the DW_LANG_C_plus_plus_11 enumerator */
#undef HAVE_DW_LANG_C_plus_plus_11_enumerator

/* Define to 1 if dwarf.h has the DW_LANG_C_plus_plus_14 enumerator */
#undef HAVE_DW_LANG_C_plus_plus_14_enumerator

/* Define to 1 if dwarf.h has the DW_LANG_D enumerator */
#undef HAVE_DW_LANG_D_enumerator

/* Define to 1 if dwarf.h has the DW_LANG_Go enumerator */
#undef HAVE_DW_LANG_Go_enumerator

/* Define to 1 if dwarf.h has the DW_LANG_Mips_Assembler enumerator */
#undef HAVE_DW_LANG_Mips_Assembler_enumerator

/* Define to 1 if dwarf.h has the DW_LANG_Python enumerator */
#undef HAVE_DW_LANG_Python_enumerator

/* Define to 1 if dwarf.h has the DW_LANG_Rust enumerator */
#undef HAVE_DW_LANG_Rust_enumerator

/* Define to 1 if dwarf.h has the DW_LANG_UPC enumerator */
#undef HAVE_DW_LANG_UPC_enumerator

/* Defined to 1 if elf.h has EM_AARCH64 macro defined */
#undef HAVE_EM_AARCH64_MACRO

/* Defined to 1 if elf.h has EM_TILEGX macro defined */
#undef HAVE_EM_TILEGX_MACRO

/* Defined to 1 if elf.h has EM_TILEPR0 macro defined */
#undef HAVE_EM_TILEPRO_MACRO

/* Define to 1 if you have the <inttypes.h> header file. */
#undef HAVE_INTTYPES_H

/* Define to 1 if you have the <minix/config.h> header file. */
#undef HAVE_MINIX_CONFIG_H

/* Defined to 1 if elf.h has R_AARCH64_ABS64 macro defined */
#undef HAVE_R_AARCH64_ABS64_MACRO

/* Defined to 1 if elf.h has R_AARCH64_PREL32 macro defined */
#undef HAVE_R_AARCH64_PREL32_MACRO

/* Define to 1 if you have the <stdint.h> header file. */
#undef HAVE_STDINT_H

/* Define to 1 if you have the <stdio.h> header file. */
#undef HAVE_STDIO_H

/* Define to 1 if you have the <stdlib.h> header file. */
#undef HAVE_STDLIB_H

/* Define to 1 if you have the <strings.h> header file. */
#undef HAVE_STRINGS_H

/* Define to 1 if you have the <string.h> header file. */
#undef HAVE_STRING_H

/* Define to 1 if you have the <sys/stat.h> header file. */
#undef HAVE_SYS_STAT_H

/* Define to 1 if you have the <sys/types.h> header file. */
#undef HAVE_SYS_TYPES_H

/* Define to 1 if you have the <unistd.h> header file. */
#undef HAVE_UNISTD_H

/* Define to 1 if you have the <wchar.h> header file. */
#undef HAVE_WCHAR_H

/* Defined if libdw has the function dwarf_getalt */
#undef LIBDW_HAS_DWARF_GETALT

/* Define to the sub-directory where libtool stores uninstalled libraries. */
#undef LT_OBJDIR

/* Define to 1 if assertions should be disabled. */
#undef NDEBUG

/* Name of package */
#undef PACKAGE

/* Define to the address where bug reports for this package should be sent. */
#undef PACKAGE_BUGREPORT

/* Define to the full name of this package. */
#undef PACKAGE_NAME

/* Define to the full name and version of this package. */
#undef PACKAGE_STRING

/* Define to the one symbol short name of this package. */
#undef PACKAGE_TARNAME

/* Define to the home page for this package. */
#undef PACKAGE_URL

/* Define to the version of this package. */
#undef PACKAGE_VERSION

/* Define to 1 if all of the C90 standard headers exist (not just the ones
   required in a freestanding environment). This macro is provided for
   backward compatibility; new code need not use it. */
#undef STDC_HEADERS

/* Enable extensions on AIX 3, Interix.  */
#ifndef _ALL_SOURCE
# undef _ALL_SOURCE
#endif
/* Enable general extensions on macOS.  */
#ifndef _DARWIN_C_SOURCE
# undef _DARWIN_C_SOURCE
#endif
/* Enable general extensions on Solaris.  */
#ifndef __EXTENSIONS__
# undef __EXTENSIONS__
#endif
/* Enable GNU extensions on systems that have them.  */
#ifndef _GNU_SOURCE
# undef _GNU_SOURCE
#endif
/* Enable X/Open compliant socket functions that do not require linking
   with -lxnet on HP-UX 11.11.  */
#ifndef _HPUX_ALT_XOPEN_SOCKET_API
# undef _HPUX_ALT_XOPEN_SOCKET_API
#endif
/* Identify the host operating system as Minix.
   This macro does not affect the system headers' behavior.
   A future release of Autoconf may stop defining this macro.  */
#ifndef _MINIX
# undef _MINIX
#endif
/* Enable general extensions on NetBSD.
   Enable NetBSD compatibility extensions on Minix.  */
#ifndef _NETBSD_SOURCE
# undef _NETBSD_SOURCE
#endif
/* Enable OpenBSD compatibility extensions on NetBSD.
   Oddly enough, this does nothing on OpenBSD.  */
#ifndef _OPENBSD_SOURCE
# undef _OPENBSD_SOURCE
#endif
/* Define to 1 if needed for POSIX-compatible behavior.  */
#ifndef _POSIX_SOURCE
# undef _POSIX_SOURCE
#endif
/* Define to 2 if needed for POSIX-compatible behavior.  */
#ifndef _POSIX_1_SOURCE
# undef _POSIX_1_SOURCE
#endif
/* Enable POSIX-compatible threading on Solaris.  */
#ifndef _POSIX_PTHREAD_SEMANTICS
# undef _POSIX_PTHREAD_SEMANTICS
#endif
/* Enable extensions specified by ISO/IEC TS 18661-5:2014.  */
#ifndef __STDC_WANT_IEC_60559_ATTRIBS_EXT__
# undef __STDC_WANT_IEC_60559_ATTRIBS_EXT__
#endif
/* Enable extensions specified by ISO/IEC TS 18661-1:2014.  */
#ifndef __STDC_WANT_IEC_60559_BFP_EXT__
# undef __STDC_WANT_IEC_60559_BFP_EXT__
#endif
/* Enable extensions specified by ISO/IEC TS 18661-2:2015.  */
#ifndef __STDC_WANT_IEC_60559_DFP_EXT__
# undef __STDC_WANT_IEC_60559_DFP_EXT__
#endif
/* Enable extensions specified by ISO/IEC TS 18661-4:2015.  */
#ifndef __STDC_WANT_IEC_60559_FUNCS_EXT__
# undef __STDC_WANT_IEC_60559_FUNCS_EXT__
#endif
/* Enable extensions specified by ISO/IEC TS 18661-3:2015.  */
#ifndef __STDC_WANT_IEC_60559_TYPES_EXT__
# undef __STDC_WANT_IEC_60559_TYPES_EXT__
#endif
/* Enable extensions specified by ISO/IEC TR 24731-2:2010.  */
#ifndef __STDC_WANT_LIB_EXT2__
# undef __STDC_WANT_LIB_EXT2__
#endif
/* Enable extensions specified by ISO/IEC 24747:2009.  */
#ifndef __STDC_WANT_MATH_SPEC_FUNCS__
# undef __STDC_WANT_MATH_SPEC_FUNCS__
#endif
/* Enable extensions on HP NonStop.  */
#ifndef _TANDEM_SOURCE
# undef _TANDEM_SOURCE
#endif
/* Enable X/Open extensions.  Define to 500 only if necessary
   to make mbstate_t available.  */
#ifndef _XOPEN_SOURCE
# undef _XOPEN_SOURCE
#endif


/* Version number of package */
#undef VERSION

/* Defined if user enabled BTF usage */
#undef WITH_BTF

/* struct btf_enum64 is present */
#undef WITH_BTF_ENUM64

/* The BTF_KIND_DECL_TAG enumerator is present */
#undef WITH_BTF_KIND_DECL_TAG

/* The BTF_KIND_TYPE_TAG enumerator is present */
#undef WITH_BTF_KIND_TYPE_TAG

/* The function btf__get_nr_types is present */
#undef WITH_BTF__GET_NR_TYPES

/* The function btf__type_cnt is present */
#undef WITH_BTF__TYPE_CNT

/* Defined if user enables and system has the libctf library */
#undef WITH_CTF

/* compile the deb package support in abipkgdiff */
#undef WITH_DEB

/* compile support of debugging canonical type propagation */
#undef WITH_DEBUG_CT_PROPAGATION

/* compile support of debugging abidw --abidiff */
#undef WITH_DEBUG_SELF_COMPARISON

/* compile support of debugging type canonicalization while using abidw
   --debug-tc */
#undef WITH_DEBUG_TYPE_CANONICALIZATION

/* compile the rpm package support in abipkgdiff */
#undef WITH_RPM

/* has rpm/zstd support */
#undef WITH_RPM_ZSTD

/* compile support of abilint --show-type-use */
#undef WITH_SHOW_TYPE_USE_IN_ABILINT

/* symbolic links are kept in the distribution tarball */
#undef WITH_SYMLINKS_KEPT_IN_DIST

/* compile the GNU tar archive support in abipkgdiff */
#undef WITH_TAR

/* Number of bits in a file offset, on hosts where this is settable. */
#undef _FILE_OFFSET_BITS

/* Define for large files, on AIX-style hosts. */
#undef _LARGE_FILES
